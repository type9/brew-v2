{"version":3,"sources":["components/nav.js","components/partsearch.js","components/sidebar.js","components/d3graph.js","components/chart.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","props","theme","fg","secondary","shadow_nav","NavWrap","div","NavWrapLeft","NavWrapCenter","NavWrapRight","NavWrapLinks","NavLink","a","spc_2","primary","fam_rale","spc_3","NavLinkActive","NavBrand","spc_4","href","Component","PartSearch","useState","inputValue","setInputValue","options","setOptions","handleChange","useRef","event","target","value","useEffect","console","log","queryUrl","fetch","then","res","json","result","list","x","drink","push","error","Autocomplete","id","style","width","getOptionLabel","option","description","filterOptions","autoComplete","includeInputInList","renderInput","params","TextField","label","variant","fullWidth","onChange","Sidebar","SearchContainer","D3Graph","container","graph","height","graphData","links","map","d","Object","create","nodes","svg","d3","attr","simulation","force","link","append","selectAll","data","join","Math","sqrt","weight","node","color","call","drag","text","on","source","y","resize","document","body","clientWidth","clientHeight","select","remove","this","active","alphaTarget","restart","fx","fy","scale","group","visual","GraphChart","refElement","window","innerWidth","setWidth","innerHeight","setHeight","setData","resizeTimer","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","d3props","current","className","ref","App","state","history","graphLoaded","setState","bg","seconadry","Content","token","fam_open","fam_lato","fam_mont","spc_0","spc_1","spc_5","link_github","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","getElementById","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"js/main.84f7f0ec.chunk.js","sourcesContent":["import React, {Component} from \"react\"\n\nimport styled from \"styled-components\"\n\nclass Nav extends Component{\n    render() {\n        //STYLE\n        const Nav = styled.nav`\n            position: relative;\n            z-index:1;\n            width:100%;\n            background-color: ${props => props.theme.fg};\n            color: ${props => props.theme.secondary};\n\n            box-shadow: ${props => props.theme.shadow_nav};\n        `;\n        const NavWrap = styled.div`\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        `;\n        const NavWrapLeft = styled(NavWrap)`\n            justify-content: start;\n        `;\n        const NavWrapCenter = styled(NavWrap)`\n            justify-content: center;\n        `;\n        const NavWrapRight = styled(NavWrap)`\n            justify-content: end;\n        `;\n        const NavWrapLinks = styled(NavWrap)`\n            flex: 0 0 auto;\n        `;\n        const NavLink = styled.a`\n            display: inline-block;\n            line-height: calc(60px - 4px);\n            flex: 0 0 auto;\n            margin-right: ${props => props.theme.spc_2};\n            color: ${props => props.theme.primary};\n            font-family: ${props => props.theme.fam_rale};\n            font-size:$ ${props => props.theme.spc_3};\n            cursor: pointer;\n            border-bottom: 4px solid transparent;\n\n            transition-duration:0.2s;\n            :link {\n                text-decoration: none;\n            }\n            :hover {\n                border-bottom: 4px solid ${props => props.theme.secondary};\n            }\n            :active {\n                border-bottom: 4px solid ${props => props.theme.secondary};\n            }\n        `;\n        const NavLinkActive = styled(NavLink)`\n            border-bottom: 4px solid ${props => props.theme.secondary};\n        `;\n        const NavBrand = styled(NavLink)`\n            margin-left: ${props => props.theme.spc_4};\n        `;\n        //LINKS\n        let gitLink = \"https://github.com/type9/brew-v2\";\n\n        return(\n            <Nav>\n                <NavWrap>\n                    <NavWrapLeft>\n                        <NavBrand>TWIST</NavBrand>\n                    </NavWrapLeft>\n                    <NavWrapCenter>\n                        <NavWrapLinks>\n                            <NavLinkActive href=\"/\">EXPLORE</NavLinkActive>\n                            <NavLink href=\"/guide\">GUIDE</NavLink>\n                        </NavWrapLinks>\n                    </NavWrapCenter>\n                    <NavWrapRight>\n                        <NavLink href={gitLink}>GIT</NavLink>\n                    </NavWrapRight>\n                </NavWrap>\n            </Nav>\n        );\n    }\n}\n\nexport default Nav;","import React, {useState, useEffect, useRef, useMemo} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport throttle from 'lodash/throttle';\n\nimport styled from \"styled-components\";\n\nfunction PartSearch(){\n    const [inputValue, setInputValue] = useState('');\n    const [options, setOptions] = useState([]);\n    const loaded = useRef(false);\n\n    //Binded to the text field to use the InputValue hook when text is entered\n    const handleChange = event => {\n        setInputValue(event.target.value);\n    }\n\n    let MAX_SUGGESTION_LENGTH = 5;\n    // Fetching and population of options data that autcomplete will use\n    // const fetchSuggestions = useMemo(() => {\n    //     throttle(() => {\n    //         let queryUrl = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${inputValue}`;\n    //         fetch(queryUrl)\n    //             .then(res => res.json())\n    //             .then(\n    //                 (result) => {\n    //                     let list = [];\n    //                     for(let x = 0; x < MAX_SUGGESTION_LENGTH; x++ ){\n    //                         list.push(result['drinks'][x]['strDrink']);\n    //                     };\n    //                     setOptions(list);\n    //                 }, error => {\n    //                     console.log(error);\n    //                 }\n    //             );\n    //     }, 200);\n    // }, [inputValue]);\n\n    //When input data changes we fetch the suggestions, populate them into a list, then set them as the options\n    // useEffect(() => {\n    //     let active = true;\n    //     if(inputValue === ''){\n    //         setOptions([]);\n    //         return undefined;\n    //     }\n\n    //     console.log(fetchSuggestions);\n    //     fetchSuggestions(inputValue, results => {\n    //         if(active){\n    //             setOptions(results || []);\n    //         }\n    //     });\n\n    //     return () => {\n    //         active = false;\n    //     };\n    // }, [inputValue, fetchSuggestions])\n    useEffect(() => {\n        console.log(\"inputValue Changed\")\n        let queryUrl = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${inputValue}`;\n        fetch(queryUrl)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let list = [];\n                    if(result['drinks']){\n                        for(let x = 0; x < MAX_SUGGESTION_LENGTH; x++ ){\n                            const drink = result['drinks'][x];\n                            if(drink){\n                                list.push(drink['strDrink']);\n                            }\n                        };\n                    }\n                    setOptions(list);\n                }, error => {\n                    console.log(error);\n                }\n            );\n    }, [inputValue]);\n\n    return (\n        <Autocomplete\n            id=\"part-search\"\n            style={{ width: 300 }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.description)}\n            filterOptions={x => x}\n            options={options}\n            autoComplete\n            includeInputInList\n            renderInput={params => (\n                <TextField\n                    {...params}\n                    label=\"Search for a cocktail\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleChange}\n                />\n            )}\n        />\n    );\n}\n\nexport default PartSearch;","import React, {Component} from \"React\"\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport PartSearch from \"./partsearch\";\nimport styled from \"styled-components\";\n\nclass Sidebar extends Component{\n    render(){\n        //STYLE\n        const Sidebar = styled.div`\n            background-color: ${props => props.theme.fg}; \n            height: calc(100vh - 60px);\n            margin: 0!important;\n            ${'' /* margin-top: ${props => props.theme.spc_4}; */}\n        `;\n\n        const SearchContainer = styled.div`\n            height: 60px;\n            width: 100%;\n            padding: 6px;\n        `;\n\n        return(\n            <Sidebar>\n                <SearchContainer>\n                    <PartSearch />\n                </SearchContainer>\n            </Sidebar>\n        )\n    }\n}\n\nexport default Sidebar;","import * as d3 from \"d3\";\nconst DEBUG = true;\n\nclass D3Graph {\n    container;\n    props;\n    svg;\n\n    constructor(container, props){\n        this.container = container;\n        this.props = props;\n        const { width, height } = props;\n\n        this.drag = simulation => {\n  \n            function dragstarted(d) {\n              if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n              d.fx = d.x;\n              d.fy = d.y;\n            }\n            \n            function dragged(d) {\n              d.fx = d3.event.x;\n              d.fy = d3.event.y;\n            }\n            \n            function dragended(d) {\n              if (!d3.event.active) simulation.alphaTarget(0);\n              d.fx = null;\n              d.fy = null;\n            }\n            \n            return d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended);\n        }\n\n        this.color = (d) => {\n            const scale = d3.scaleOrdinal(d3.schemeCategory10);\n            return d => scale(d.group);\n        }\n\n        console.log(\"[D3Graph] Rendering to \" + container);\n        d3.select(container)\n            .append(() => {\n                return this.graph(width, height);\n            });\n    }\n\n    graph = (width, height) => {\n        const {props: { graphData } } = this;\n        const links = graphData.links.map(d => Object.create(d));\n        const nodes = graphData.nodes.map(d => Object.create(d));\n        \n        const svg = d3.create(\"svg\")\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n      \n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(links).id(d => d.id))\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"x\", d3.forceX())\n            .force(\"y\", d3.forceY());\n      \n        const link = svg.append(\"g\")\n            .attr(\"stroke\", \"#999\")\n            .attr(\"stroke-opacity\", 0.6)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n            .attr(\"stroke-width\", d => Math.sqrt(d.weight));\n      \n        const node = svg.append(\"g\")\n            .attr(\"stroke\", \"#fff\")\n            .attr(\"stroke-width\", 1.5)\n          .selectAll(\"circle\")\n          .data(nodes)\n          .join(\"circle\")\n            .attr(\"r\", 5)\n            .attr(\"fill\", this.color)\n            .call(this.drag(simulation));\n      \n        node.append(\"title\")\n            .text(d => d.id);\n      \n        simulation.on(\"tick\", () => {\n          link\n              .attr(\"x1\", d => d.source.x)\n              .attr(\"y1\", d => d.source.y)\n              .attr(\"x2\", d => d.target.x)\n              .attr(\"y2\", d => d.target.y);\n      \n          node\n              .attr(\"cx\", d => d.x)\n              .attr(\"cy\", d => d.y);\n        });\n      \n        return svg.node();\n    }\n\n    resize = (width, height) => {\n        console.log(document.body.clientWidth, document.body.clientHeight);\n        console.log(`RESIZE AT ${width} ${height}`)\n        d3.select(this.container).select(\"svg\").remove();\n        d3.select(this.container)\n            .append(() => {\n                return this.graph(width, height);\n            });\n    }\n}\n\nexport default D3Graph;","import React, { useState, useEffect, useRef } from 'react';\nimport D3Graph from \"./d3graph\";\n\nlet visual = null;\n\nfunction GraphChart(){\n    const refElement = useRef(null);\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n    const [graphData, setData] = useState(null);\n    const [active, setActive] = useState(null);\n\n    useEffect(fetchData, []);\n    useEffect(handleResizeEvent, []);\n    useEffect(initGraph, [ graphData ]);\n    useEffect(updateVisualOnResize, [ width, height ]);\n\n    function getWidth(){\n        return window.innerWidth;\n    }\n    function getHeight(){\n        return window.innerHeight;\n    }\n\n    function fetchData(){\n        fetch(\"/api/graph\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setData(result);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    }\n\n    function initGraph(){\n        if(graphData){\n            console.log(\"initializing graph with data: \");\n            console.log(graphData);\n            const d3props = {\n                graphData,\n                width,\n                height\n            };\n            visual = new D3Graph(refElement.current, d3props);\n        }\n    }\n\n    function handleResizeEvent() {\n        let resizeTimer;\n        const handleResize = () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n                setWidth(getWidth());\n                setHeight(getHeight());\n\n            }, 300);\n        }\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }\n\n    function updateVisualOnResize() {\n        visual && visual.resize(width, height);\n    }\n\n    return (\n        <div className=\"chart-container\">\n            <div>{active}</div>\n            <div id = \"graph-container\" ref={refElement}/>\n        </div>\n    );\n}\n    \nexport default GraphChart;","import React, {Component} from \"react\";\n\nimport Nav from \"./components/nav\";\nimport Sidebar from  \"./components/sidebar\";\nimport GraphChart from \"./components/chart\";\n\nimport styled from \"styled-components\";\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      history : [\n        {\n          simulation: null\n        }\n      ],\n      graphLoaded: false,\n      graphData: null,\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"/api/graph\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            graphLoaded: true,\n            graphData: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            graphLoaded: false,\n            error\n          });\n        }\n      )\n  }\n  \n  render() {\n    //STYLE\n    const App = styled.div`\n      background-color: ${props => props.theme.bg};\n      color: ${props => props.theme.seconadry};\n    `;\n\n    const Content = styled.div`\n      display: grid;\n      grid-template-columns: 1fr 4fr;\n      width: 100%;\n    `;\n    \n    //FUNCTIONS\n    const token = window.token;\n\n    return(\n      <App>\n        <Nav />\n        <Content>\n          <Sidebar />\n          <GraphChart />\n        </Content>\n      </App>\n    );\n  }\n\n}\n\nexport default App;","const theme = {\n    //COLORS\n    fg: \"White\",\n    bg: \"WhiteSmoke\",\n    primary: \"Black\",\n    secondary: \"DarkCyan\",\n    //DROPSHADOW\n    shadow_nav: \"0px 4px 6px 0px rgba(0,0,0,0.3)\",\n    //FONT_FAMILIES\n    fam_open: \"'Open Sans', sans-serif\",\n    fam_lato: \"'Lato', sans-serif\",\n    fam_mont: \"'Montserrat', sans-serif\",\n    fam_rale: \"'Raleway', sans-serif\",\n    //SPACING\n    spc_0: \"0\",\n    spc_1: \"0.5em\",\n    spc_2: \"1em\",\n    spc_3: \"2em\",\n    spc_4: \"3em\",\n    spc_5: \"6em\",\n    //LINKS\n    link_github: \"https://github.com/type9/brew-v2\",\n};\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport theme from \"./theme\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport {ThemeProvider, createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n     body{\n         background-color:${theme.bg};\n         margin: 0;\n         padding: 0;\n     }\n`;\n\nReactDOM.render(\n    <React.Fragment>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </React.Fragment>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}