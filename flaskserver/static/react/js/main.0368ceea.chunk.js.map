{"version":3,"sources":["components/nav.js","components/sidebar.js","components/d3graph.js","components/chart.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","props","theme","fg","secondary","shadow_nav","NavWrap","div","NavWrapLeft","NavWrapCenter","NavWrapRight","NavWrapLinks","NavLink","a","spc_4","spc_2","primary","fam_rale","spc_3","NavLinkActive","NavBrand","href","Component","Sidebar","aside","D3Graph","container","updateLinksNodes","graphData","links","nodes","map","d","Object","create","console","log","updateSimulation","simulation","d3","force","id","updateLinkStyle","link","svg","append","attr","selectAll","data","join","Math","sqrt","value","updateNodeStyle","node","text","tick","source","x","y","target","this","width","height","on","GraphChart","useState","setData","active","refElement","useRef","useEffect","fetch","then","res","json","result","error","d3props","current","className","ref","App","state","history","graphLoaded","setState","bg","seconadry","window","token","fam_open","fam_lato","fam_mont","spc_0","spc_1","spc_5","link_github","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"js/main.0368ceea.chunk.js","sourcesContent":["import React, {Component} from \"react\"\n\nimport styled from \"styled-components\"\n\nclass Nav extends Component{\n    render() {\n        //STYLE\n        const Nav = styled.nav`\n            position:fixed;\n            z-index:1;\n            width:100%;\n            background-color: ${props => props.theme.fg};\n            color: ${props => props.theme.secondary};\n\n            box-shadow: ${props => props.theme.shadow_nav};\n        `;\n        const NavWrap = styled.div`\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        `;\n        const NavWrapLeft = styled(NavWrap)`\n            justify-content: start;\n        `;\n        const NavWrapCenter = styled(NavWrap)`\n            justify-content: center;\n        `;\n        const NavWrapRight = styled(NavWrap)`\n            justify-content: end;\n        `;\n        const NavWrapLinks = styled(NavWrap)`\n            flex: 0 0 auto;\n        `;\n        const NavLink = styled.a`\n            display: inline-block;\n            line-height: calc(${props => props.theme.spc_4} - 4px);\n            flex: 0 0 auto;\n            margin-right: ${props => props.theme.spc_2};\n            color: ${props => props.theme.primary};\n            font-family: ${props => props.theme.fam_rale};\n            font-size:$ ${props => props.theme.spc_3};\n            cursor: pointer;\n            border-bottom: 4px solid transparent;\n\n            transition-duration:0.2s;\n            :link {\n                text-decoration: none;\n            }\n            :hover {\n                border-bottom: 4px solid ${props => props.theme.secondary};\n            }\n            :active {\n                border-bottom: 4px solid ${props => props.theme.secondary};\n            }\n        `;\n        const NavLinkActive = styled(NavLink)`\n            border-bottom: 4px solid ${props => props.theme.secondary};\n        `;\n        const NavBrand = styled(NavLink)`\n            margin-left: ${props => props.theme.spc_4};\n        `;\n        //LINKS\n        let gitLink = \"https://github.com/type9/brew-v2\";\n\n        return(\n            <Nav>\n                <NavWrap>\n                    <NavWrapLeft>\n                        <NavBrand>TWIST</NavBrand>\n                    </NavWrapLeft>\n                    <NavWrapCenter>\n                        <NavWrapLinks>\n                            <NavLinkActive href=\"/\">EXPLORE</NavLinkActive>\n                            <NavLink href=\"/guide\">GUIDE</NavLink>\n                        </NavWrapLinks>\n                    </NavWrapCenter>\n                    <NavWrapRight>\n                        <NavLink href={gitLink}>GIT</NavLink>\n                    </NavWrapRight>\n                </NavWrap>\n            </Nav>\n        );\n    }\n}\n\nexport default Nav;","import React, {Component} from \"React\"\n\nimport styled from \"styled-components\"\n\nclass Sidebar extends Component{\n    render(){\n        //STYLE\n        const Sidebar = styled.aside`\n            background-color: ${props => props.theme.fg};\n            height: calc(100vh - ${props => props.theme.spc_4});\n            margin-top: ${props => props.theme.spc_4};\n            width: 16em;\n            position: fixed;\n        `;\n\n        return(\n            <Sidebar>\n            </Sidebar>\n        )\n    }\n}\n\nexport default Sidebar;","import * as d3 from \"d3\";\nconst DEBUG = true;\n\nclass D3Graph {\n    container;\n    props;\n    svg;\n\n    constructor(container, props){\n        this.container = container;\n        this.props = props;\n        const { width, height } = props;\n\n        this.links = null;\n        this.nodes = null;\n        this.simulation = null;\n        this.link = null;\n        this.node = null;\n\n\n\n        this.svg = d3.create(\"svg\")\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n        this.updateLinksNodes();\n        this.updateSimulation();\n        this.updateLinkStyle();\n        this.updateNodeStyle();\n        this.simulation.on(\"tick\", this.tick());\n\n        console.log(\"[D3Graph] Rendering to \" + container);\n        // d3.select(container).append(this.svg);\n        d3.select(container)\n            .append(() => {\n                return this.svg.node();\n            });\n    }\n\n    updateLinksNodes = () => {\n        const {props: { graphData: { links, nodes } } } = this;\n        this.links = links.map(d => Object.create(d));\n        this.nodes = nodes.map(d => Object.create(d));\n        console.log(\"[D3Graph] Updated Nodes/Links\");\n    }\n\n    updateSimulation = () => {\n        this.simulation = d3.forceSimulation(this.nodes)\n            .force(\"link\", d3.forceLink(this.links).id(d => d.id))\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"x\", d3.forceX())\n            .force(\"y\", d3.forceY());\n        console.log(\"[D3Graph] Updated Simulation\");\n    }\n\n    updateLinkStyle = () => {\n        this.link = this.svg.append(\"g\")\n                .attr(\"stroke\", \"#999\")\n                .attr(\"stroke-opacity\", 0.6)\n            .selectAll(\"line\")\n            .data(this.links)\n            .join(\"line\")\n                .attr(\"stroke-width\", d => Math.sqrt(d.value));\n        console.log(\"[D3Graph] Updated LinkStyle\");\n        \n    }\n\n    updateNodeStyle = () => {\n        this.node = this.svg.append(\"g\")\n                .attr(\"stroke\", \"#fff\")\n                .attr(\"stroke-width\", 1.5)\n            .selectAll(\"circle\")\n            .data(this.nodes)\n            .join(\"circle\")\n                .attr(\"r\", 5)\n        \n        this.node.append(\"title\")\n            .text(d => d.id);\n        \n        console.log(\"[D3Graph] Updated NodeStyle\");\n    }\n\n    tick = () => {\n        this.link\n            .attr(\"x1\", d => d.source.x)\n            .attr(\"y1\", d => d.source.y)\n            .attr(\"x2\", d => d.target.x)\n            .attr(\"y2\", d => d.target.y);\n\n        this.node\n            .attr(\"cx\", d => d.x)\n            .attr(\"cy\", d => d.y);\n        \n        console.log(\"[D3Graph] Declared tick function\");\n    }\n}\n\nexport default D3Graph;","\nimport React, { useState, useEffect, useRef } from 'react';\nimport D3Graph from \"./d3graph\";\n\nlet visual = null;\n\nfunction GraphChart(){\n    const [width, setWidth] = useState(600);\n    const [height, setHeight] = useState(600);\n    const [graphData, setData] = useState(null);\n    const [active, setActive] = useState(null);\n    const refElement = useRef(null);\n\n    useEffect(fetchData, []);\n    useEffect(initGraph, [ graphData ]);\n\n    function fetchData(){\n        fetch(\"/api/graph\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setData(result);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    }\n\n    function initGraph(){\n        if(graphData){\n            console.log(\"initializing graph with data: \");\n            console.log(graphData);\n            const d3props = {\n                graphData,\n                width,\n                height\n            };\n            visual = new D3Graph(refElement.current, d3props);\n        }\n    }\n\n    return (\n        <div className=\"chart-container\">\n            <div>{active}</div>\n            <div className = \"graph-container\" ref={refElement}/>\n        </div>\n    );\n}\n    \nexport default GraphChart;","import React, {Component} from \"react\";\n\nimport Nav from \"./components/nav\"\nimport Sidebar from  \"./components/sidebar\"\nimport GraphChart from \"./components/chart\"\n\nimport styled from \"styled-components\"\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      history : [\n        {\n          simulation: null\n        }\n      ],\n      graphLoaded: false,\n      graphData: null,\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"/api/graph\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            graphLoaded: true,\n            graphData: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            graphLoaded: false,\n            error\n          });\n        }\n      )\n  }\n  \n  render() {\n    //STYLE\n    const App = styled.div`\n      background-color: ${props => props.theme.bg};\n      color: ${props => props.theme.seconadry};\n    `;\n    \n    //FUNCTIONS\n    const token = window.token;\n\n    return(\n      <App>\n        <Nav />\n        <Sidebar />\n        <GraphChart />\n      </App>\n    );\n  }\n\n}\n\nexport default App;","const theme = {\n    //COLORS\n    fg: \"White\",\n    bg: \"WhiteSmoke\",\n    primary: \"Black\",\n    secondary: \"DarkCyan\",\n    //DROPSHADOW\n    shadow_nav: \"0px 4px 6px 0px rgba(0,0,0,0.3)\",\n    //FONT_FAMILIES\n    fam_open: \"'Open Sans', sans-serif\",\n    fam_lato: \"'Lato', sans-serif\",\n    fam_mont: \"'Montserrat', sans-serif\",\n    fam_rale: \"'Raleway', sans-serif\",\n    //SPACING\n    spc_0: \"0\",\n    spc_1: \"0.5em\",\n    spc_2: \"1em\",\n    spc_3: \"2em\",\n    spc_4: \"3em\",\n    spc_5: \"6em\",\n    //LINKS\n    link_github: \"https://github.com/type9/brew-v2\",\n};\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport theme from \"./theme\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport {ThemeProvider, createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n     body{\n         background-color:${theme.bg};\n\n         margin: 0;\n         padding: 0;\n     }\n`;\n\nReactDOM.render(\n    <React.Fragment>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </React.Fragment>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}