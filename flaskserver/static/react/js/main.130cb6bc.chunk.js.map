{"version":3,"sources":["components/nav.js","components/partsearch.js","components/bucket.js","components/sidebar.js","components/d3graph.js","components/chart.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","props","theme","fg","secondary","shadow_nav","NavWrap","div","NavWrapLeft","NavWrapCenter","NavWrapRight","NavWrapLinks","NavLink","a","spc_2","primary","fam_rale","spc_3","NavLinkActive","NavBrand","spc_4","href","Component","PartSearch","useState","inputValue","setInputValue","options","setOptions","handleChange","event","target","value","useEffect","console","log","queryUrl","fetch","then","res","json","result","error","Autocomplete","id","style","width","onChange","addPart","getOptionLabel","option","strDrink","autoComplete","includeInputInList","renderInput","params","TextField","label","variant","fullWidth","useStyles","makeStyles","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","BucketList","element","dense","Grid","item","xs","md","Typography","List","ListItem","ListItemAvatar","Avatar","ListItemText","name","ListItemSecondaryAction","IconButton","edge","aria-label","partBucket","map","data","React","cloneElement","Sidebar","SearchContainer","BucketContainer","this","setGraphData","D3Graph","container","graph","height","graphData","links","d","Object","create","nodes","svg","d3","attr","simulation","force","link","append","selectAll","join","Math","sqrt","weight","node","color","call","drag","text","on","source","x","y","resize","document","body","clientWidth","clientHeight","select","remove","active","alphaTarget","restart","fx","fy","scale","group","visual","GraphChart","refElement","useRef","window","innerWidth","setWidth","innerHeight","setHeight","resizeTimer","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","d3props","current","className","ref","App","bind","state","setState","length","ingrNum","push","method","JSON","stringify","response","newBucket","concat","updateGraph","bg","Content","token","fam_open","fam_lato","fam_mont","spc_0","spc_1","spc_5","link_github","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","getElementById","URL","process","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"js/main.130cb6bc.chunk.js","sourcesContent":["import React, {Component} from \"react\"\n\nimport styled from \"styled-components\"\n\nclass Nav extends Component{\n    render() {\n        //STYLE\n        const Nav = styled.nav`\n            position: relative;\n            z-index:1;\n            width:100%;\n            background-color: ${props => props.theme.fg};\n            color: ${props => props.theme.secondary};\n\n            box-shadow: ${props => props.theme.shadow_nav};\n        `;\n        const NavWrap = styled.div`\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        `;\n        const NavWrapLeft = styled(NavWrap)`\n            justify-content: start;\n        `;\n        const NavWrapCenter = styled(NavWrap)`\n            justify-content: center;\n        `;\n        const NavWrapRight = styled(NavWrap)`\n            justify-content: end;\n        `;\n        const NavWrapLinks = styled(NavWrap)`\n            flex: 0 0 auto;\n        `;\n        const NavLink = styled.a`\n            display: inline-block;\n            line-height: calc(60px - 4px);\n            flex: 0 0 auto;\n            margin-right: ${props => props.theme.spc_2};\n            color: ${props => props.theme.primary};\n            font-family: ${props => props.theme.fam_rale};\n            font-size:$ ${props => props.theme.spc_3};\n            cursor: pointer;\n            border-bottom: 4px solid transparent;\n\n            transition-duration:0.2s;\n            :link {\n                text-decoration: none;\n            }\n            :hover {\n                border-bottom: 4px solid ${props => props.theme.secondary};\n            }\n            :active {\n                border-bottom: 4px solid ${props => props.theme.secondary};\n            }\n        `;\n        const NavLinkActive = styled(NavLink)`\n            border-bottom: 4px solid ${props => props.theme.secondary};\n        `;\n        const NavBrand = styled(NavLink)`\n            margin-left: ${props => props.theme.spc_4};\n        `;\n        //LINKS\n        let gitLink = \"https://github.com/type9/brew-v2\";\n\n        return(\n            <Nav>\n                <NavWrap>\n                    <NavWrapLeft>\n                        <NavBrand>TWIST</NavBrand>\n                    </NavWrapLeft>\n                    <NavWrapCenter>\n                        <NavWrapLinks>\n                            <NavLinkActive href=\"/\">EXPLORE</NavLinkActive>\n                            <NavLink href=\"/guide\">GUIDE</NavLink>\n                        </NavWrapLinks>\n                    </NavWrapCenter>\n                    <NavWrapRight>\n                        <NavLink href={gitLink}>GIT</NavLink>\n                    </NavWrapRight>\n                </NavWrap>\n            </Nav>\n        );\n    }\n}\n\nexport default Nav;","import React, {useState, useEffect} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport throttle from 'lodash/throttle';\n\nimport styled from \"styled-components\";\n\nfunction PartSearch(props){\n    const [inputValue, setInputValue] = useState('');\n    const [options, setOptions] = useState([]);\n\n    //Binded to the text field to use the InputValue hook when text is entered\n    const handleChange = event => {\n        setInputValue(event.target.value);\n    }\n\n    const handleSelection = (event, value) => {\n        console.log(\"handleSelected \" + value);\n        props.addPart(value);\n    }\n\n    let MAX_SUGGESTION_LENGTH = 5;\n    useEffect(() => {\n        console.log(\"inputValue Changed\")\n        let queryUrl = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${inputValue}`;\n        fetch(queryUrl)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setOptions(result['drinks']);\n                }, error => {\n                    console.log(error);\n                }\n            );\n    }, [inputValue]);\n\n    return (\n        <Autocomplete\n            id=\"part-search\"\n            style={{ width: 300 }}\n            onChange={handleSelection}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.strDrink)}\n            options={options}\n            autoComplete\n            includeInputInList\n            renderInput={params => (\n                <TextField\n                    {...params}\n                    label=\"Search for a cocktail\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleChange}\n                />\n            )}\n        />\n    );\n}\n\nexport default PartSearch;","import React, {useState, useEffect, cloneElement} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport styled from \"styled-components\";\nimport PartSearch from './partsearch';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        margin: theme.spacing(4, 0, 2),\n    }\n}));\n\nfunction BucketList(props){\n    const classes = useStyles();\n    const [dense, setDense] = useState(false);\n    const [primary, setPrimary] = useState(false);\n    const [secondary, setSecondary] = useState(false);\n\n    // When the part bucket updates, we retrieve an updated subgraph from the server\n    // useEffect(() => {\n    //     if(props.partBucket.length === 0){\n    //         return undefined;\n    //     }\n    //     console.log(\"Fetching subgraph\");\n    //     let nodes = [];\n    //     props.partBucket.map(data => {\n    //         console.log(data);\n    //         let ingrNum = 1;\n    //         while(data['strIngredient' + ingrNum]) {\n    //             nodes.push(data['strIngredient' + ingrNum]);\n    //             ingrNum += 1;\n    //         }\n    //     });\n\n    //     let data = {nodes: nodes};\n    //     console.log(data);\n    //     fetch('/api/subgraph', {\n    //         method: \"POST\",\n    //         body: JSON.stringify(data)\n    //     })\n    //     .then((response) => { return response.json(); })\n    //     .then((data) => {\n    //         props.setGraphData(data);\n    //     })\n    // }, [props.partBucket]);\n\n    function populate(element) {\n        return props.partBucket.map(data =>\n            React.cloneElement(element, {\n                name: data['strDrink'],\n            }),\n        );\n    }\n\n    return(\n        <Grid item xs={12} md={8} >\n            <Typography variant=\"h6\">\n            Currently simulating:\n            </Typography>\n            <div>\n            <List dense={dense}>\n                {populate(\n                <ListItem>\n                    <ListItemAvatar>\n                    <Avatar>\n                        <FolderIcon />\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                    primary={props.name ? 'Secondary text' : null}\n                    secondary={secondary ? 'Secondary text' : null}\n                    />\n                    <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>,\n                )}\n            </List>\n            </div>\n        </Grid>\n    );\n}\n\nexport default BucketList;","import React, {Component} from \"React\"\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport PartSearch from \"./partsearch\";\nimport BucketList from \"./bucket\";\nimport styled from \"styled-components\";\n\nclass Sidebar extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render(){\n        //STYLE\n        const Sidebar = styled.div`\n            background-color: ${props => props.theme.fg}; \n            height: calc(100vh - 60px);\n            margin: 0!important;\n            ${'' /* margin-top: ${props => props.theme.spc_4}; */}\n        `;\n\n        const SearchContainer = styled.div`\n            height: 60px;\n            width: 100%;\n            padding: 12px 6px 6px 6px;\n        `;\n\n        const BucketContainer = styled.div`\n            padding: 18px 6px 6px 6px;\n            width: 100%;\n        `;\n\n        return(\n            <Sidebar>\n                <SearchContainer>\n                    <PartSearch\n                        addPart={this.props.addPart}\n                    />\n                </SearchContainer>\n                <BucketContainer>\n                    <BucketList\n                        partBucket={this.props.partBucket}\n                        setGraphData={this.props.setGraphData}\n                    />\n                </BucketContainer>\n            </Sidebar>\n        )\n    }\n}\n\nexport default Sidebar;","import * as d3 from \"d3\";\nconst DEBUG = true;\n\nclass D3Graph {\n    container;\n    props;\n    svg;\n\n    constructor(container, props){\n        this.container = container;\n        this.props = props;\n        const { width, height } = props;\n\n        this.drag = simulation => {\n  \n            function dragstarted(d) {\n              if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n              d.fx = d.x;\n              d.fy = d.y;\n            }\n            \n            function dragged(d) {\n              d.fx = d3.event.x;\n              d.fy = d3.event.y;\n            }\n            \n            function dragended(d) {\n              if (!d3.event.active) simulation.alphaTarget(0);\n              d.fx = null;\n              d.fy = null;\n            }\n            \n            return d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended);\n        }\n\n        this.color = (d) => {\n            const scale = d3.scaleOrdinal(d3.schemeCategory10);\n            return d => scale(d.group);\n        }\n\n        console.log(\"[D3Graph] Rendering to \" + container);\n        d3.select(container)\n            .append(() => {\n                return this.graph(width, height);\n            });\n    }\n\n    graph = (width, height) => {\n        const {props: { graphData } } = this;\n        const links = graphData.links.map(d => Object.create(d));\n        const nodes = graphData.nodes.map(d => Object.create(d));\n        \n        const svg = d3.create(\"svg\")\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n      \n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(links).id(d => d.id))\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"x\", d3.forceX())\n            .force(\"y\", d3.forceY());\n      \n        const link = svg.append(\"g\")\n            .attr(\"stroke\", \"#999\")\n            .attr(\"stroke-opacity\", 0.6)\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n            .attr(\"stroke-width\", d => Math.sqrt(d.weight));\n      \n        const node = svg.append(\"g\")\n            .attr(\"stroke\", \"#fff\")\n            .attr(\"stroke-width\", 1.5)\n          .selectAll(\"circle\")\n          .data(nodes)\n          .join(\"circle\")\n            .attr(\"r\", 5)\n            .attr(\"fill\", this.color)\n            .call(this.drag(simulation));\n      \n        node.append(\"title\")\n            .text(d => d.id);\n      \n        simulation.on(\"tick\", () => {\n          link\n              .attr(\"x1\", d => d.source.x)\n              .attr(\"y1\", d => d.source.y)\n              .attr(\"x2\", d => d.target.x)\n              .attr(\"y2\", d => d.target.y);\n      \n          node\n              .attr(\"cx\", d => d.x)\n              .attr(\"cy\", d => d.y);\n        });\n      \n        return svg.node();\n    }\n\n    resize = (width, height) => {\n        console.log(document.body.clientWidth, document.body.clientHeight);\n        console.log(`RESIZE AT ${width} ${height}`)\n        d3.select(this.container).select(\"svg\").remove();\n        d3.select(this.container)\n            .append(() => {\n                return this.graph(width, height);\n            });\n    }\n}\n\nexport default D3Graph;","import React, { useState, useEffect, useRef } from 'react';\nimport D3Graph from \"./d3graph\";\n\nlet visual = null;\n\nfunction GraphChart(props){\n    console.log(props);\n    const refElement = useRef(null);\n    const [width, setWidth] = useState(window.innerWidth - 312);\n    const [height, setHeight] = useState(window.innerHeight - 60);\n\n    // useEffect(fetchData, []);\n    useEffect(handleResizeEvent, []);\n    useEffect(initGraph, []);\n    useEffect(updateVisualOnResize, [ width, height ]);\n\n    function getWidth(){\n        return window.innerWidth - 312;\n    }\n    function getHeight(){\n        return window.innerHeight - 60;\n    }\n\n    function fetchData(){\n        fetch(\"/api/graph\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                props.setGraphData(result);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    }\n\n    function initGraph(){\n        let graphData = props.graphData;\n        if(graphData){\n            console.log(\"initializing graph with data: \");\n            console.log(graphData);\n            const d3props = {\n                graphData,\n                width,\n                height\n            };\n            visual = new D3Graph(refElement.current, d3props);\n        }\n    }\n\n    function handleResizeEvent() {\n        let resizeTimer;\n        const handleResize = () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n                setWidth(getWidth());\n                setHeight(getHeight());\n\n            }, 300);\n        }\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }\n\n    function updateVisualOnResize() {\n        visual && visual.resize(width, height);\n    }\n\n    return (\n        <div className=\"chart-container\">\n            <div id = \"graph-container\" ref={refElement}/>\n        </div>\n    );\n}\n    \nexport default GraphChart;","import React, {Component} from \"react\";\n\nimport Nav from \"./components/nav\";\nimport Sidebar from  \"./components/sidebar\";\nimport GraphChart from \"./components/chart\";\n\nimport styled from \"styled-components\";\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.setGraphData = this.setGraphData.bind(this);\n    this.addPart = this.addPart.bind(this);\n    this.state = {\n      graphData: null,\n      partBucket: [],\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"/api/graph\")\n    .then(res => res.json())\n    .then(\n        (result) => {\n            this.setState({graphData: result})\n        },\n        (error) => {\n            console.log(error);\n        });\n  }\n\n  updateGraph(){\n    console.log(this.state.partBucket);\n    if(this.state.partBucket.length === 0){\n      console.log(\"No data to update\");\n      return undefined;\n    }\n    console.log(\"Fetching subgraph\");\n    let nodes = [];\n    this.state.partBucket.map(data => {\n      console.log(data);\n      let ingrNum = 1;\n      while(data['strIngredient' + ingrNum]) {\n          nodes.push(data['strIngredient' + ingrNum]);\n          ingrNum += 1;\n      }\n    });\n\n    let data = {nodes: nodes};\n    console.log(data);\n    fetch('/api/subgraph', {\n      method: \"POST\",\n      body: JSON.stringify(data)\n    })\n    .then((response) => { return response.json(); })\n    .then((data) => {\n      this.setGraphData(data);\n    })\n  }\n\n  setGraphData(data) {\n    this.setState({graphData: data});\n  }\n\n  addPart(data) {\n    // this.setState(prevState => ({\n    //   partBucket: [...prevState.partBucket, data]\n    // }), this.updateGraph());\n    let newBucket = this.state.partBucket.concat([data])\n    this.setState({\n      partBucket: newBucket\n    }, this.updateGraph);\n  }\n\n  render() {\n    //STYLE\n    const App = styled.div`\n      background-color: ${props => props.theme.bg};\n      color: ${props => props.theme.secondary};\n    `;\n\n    const Content = styled.div`\n      display: grid;\n      grid-template-columns: 1fr 4fr;\n      width: 100%;\n    `;\n    \n    //FUNCTIONS\n    const token = window.token;\n\n    return(\n      <App>\n        <Nav />\n        <Content>\n          <Sidebar \n            addPart={this.addPart}\n            partBucket={this.state.partBucket}\n            setGraphData={this.setGraphData}\n          />\n          <GraphChart \n            graphData={this.state.graphData}\n          />\n        </Content>\n      </App>\n    );\n  }\n\n}\n\nexport default App;","const theme = {\n    //COLORS\n    fg: \"White\",\n    bg: \"WhiteSmoke\",\n    primary: \"Black\",\n    secondary: \"DarkCyan\",\n    //DROPSHADOW\n    shadow_nav: \"0px 4px 6px 0px rgba(0,0,0,0.3)\",\n    //FONT_FAMILIES\n    fam_open: \"'Open Sans', sans-serif\",\n    fam_lato: \"'Lato', sans-serif\",\n    fam_mont: \"'Montserrat', sans-serif\",\n    fam_rale: \"'Raleway', sans-serif\",\n    //SPACING\n    spc_0: \"0\",\n    spc_1: \"0.5em\",\n    spc_2: \"1em\",\n    spc_3: \"2em\",\n    spc_4: \"3em\",\n    spc_5: \"6em\",\n    //LINKS\n    link_github: \"https://github.com/type9/brew-v2\",\n};\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport theme from \"./theme\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport {ThemeProvider, createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n     body{\n         background-color:${theme.bg};\n         margin: 0;\n         padding: 0;\n     }\n`;\n\nReactDOM.render(\n    <React.Fragment>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </React.Fragment>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}